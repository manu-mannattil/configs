snippet cin
	${1:std::}cin >> ${2};
snippet com
	// com: : ${TMPDIR:=/tmp}
	// com: : ${CXX:=c++}
	// com: : ${CXXFLAGS:=-Wall -Werror -Wfatal-errors}
	// com: \{ ${CXX} {} ${CXXFLAGS} -o ${TMPDIR}/{!}; \} && ${TMPDIR}/{!} {@}

snippet cout
	${1:std::}cout << ${2} << $1endl;
snippet for
	for (int ${1:i} = 0; $1 < ${2:count}; $1${3:++}) {
		${4}
	}
snippet fore
	for (${1:auto} ${2:i} : ${3:container}) {
		${4}
	}
snippet inc
	#include <${1:iostream}>
snippet main
	int main(int argc, const char* argv[]) {
		${1}
		return 0;
	}
snippet ns
	using namespace ${1:std};
snippet struct
	struct ${1:Name} {
		${2:// code}
	};
snippet cl
	class ${1:name}
	{
	public:
		${2:type} ${3:name};
		$1($2 $3) : $3($3) {
			${4:// contents}
		}
	};
snippet switch
	switch (${1:/* variable */}) {
		case ${2:/* variable case */}:
			${3}
			${4:break;}${5}
		default:
			${6}
	}
snippet st
	size_t
snippet random
	#include <random>
	std::random_device rand_dev;
	std::mt19937_64 rand_gen(rand_dev());
	std::uniform_real_distribution<double> unif(0, 1);
	std::normal_distribution<double> normal(0);
