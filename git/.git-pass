#!/bin/sh
#
# ~/.git-pass -- get passwords for git repositories using pass(1)
#
# This is a simple shell/AWK script that serves as a git
# credential helper for retrieving passwords from
# a pass(1)-managed store.  Git expects a credential helper to
# accept an action argument and read additional data from the
# stdin.  Based on the action argument and the stdin data, the
# credential helper is supposed to print (on the stdout) the
# password and other details that git will read.  For more, see:
#
#   https://git-scm.com/book/en/v2/Git-Tools-Credential-Storage
#
# Another more featureful helper:
#
#   https://github.com/languitar/pass-git-helper
#

# Continue only if the action argument is "get".
[ "$1" = "get" ] || exit 0

exec awk -F = '
    # Capture the host name to determine the pass entry.
    # Alternatively, one can also look at the full path of the
    # repository (after enabling useHttpPath in ~/.gitconfig) to
    # determine the entry name.
    /^host/ { host = $2 }
    /^path/ { path = $2 }

    { print }

    END {
        if (host ~ /bitbucket.org/) {
            username = "manu-mannattil"
            entry = "dev/bitbucket"
        } else if (host ~ /github.com/) {
            username = "manu-mannattil"
            entry = "dev/github"
        } else if (host ~ /gitlab.com/) {
            username = "manu-mannattil"
            entry = "dev/gitlab"
        } else {
            printf("error: no matches found for %s\n", host)
            exit 1
        }

        cmd = "pass show " entry
        cmd | getline password
        close(cmd)

        printf("username=%s\n", username)
        printf("password=%s\n", password)
    }
'
